name: build-linux

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64, armv7l]

    outputs:
      app_name: ${{ steps.meta.outputs.app_name }}
      app_version: ${{ steps.meta.outputs.app_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Electron
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ matrix.arch }}

      - name: Install dependencies
        run: bun install

      - name: Build app
        run: bun run build --filter desktop

      - name: Build Electron (${{ matrix.arch }})
        run: |
          cd apps/desktop
          USE_HARD_LINKS=false bunx electron-builder --linux --${{ matrix.arch }}

      - name: Extract metadata from package.json
        id: meta
        run: |
          echo "app_name=$(jq -r .name apps/desktop/package.json)" >> $GITHUB_OUTPUT
          echo "app_version=$(jq -r .version apps/desktop/package.json)" >> $GITHUB_OUTPUT

  upload:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: full-dist
            path: apps/desktop/dist
          - name: linux-unpacked
            path: apps/desktop/dist/linux-unpacked
          - name: linux-tar
            path: apps/desktop/dist/${{ needs.build.outputs.app_name }}-${{ needs.build.outputs.app_version }}.tar.gz
          - name: linux-armv7l-unpacked
            path: apps/desktop/dist/linux-armv7l-unpacked
          - name: linux-armv7l-tar
            path: apps/desktop/dist/${{ needs.build.outputs.app_name }}-${{ needs.build.outputs.app_version }}-armv7l.tar.gz
          - name: linux-arm64-unpacked
            path: apps/desktop/dist/linux-arm64-unpacked
          - name: linux-arm64-tar
            path: apps/desktop/dist/${{ needs.build.outputs.app_name }}-${{ needs.build.outputs.app_version }}-arm64.tar.gz

    steps:
      - name: Upload ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: build-linux-${{ matrix.name }}
          path: ${{ matrix.path }}

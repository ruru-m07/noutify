name: build-windows

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4.3.0
        with:
          node-version: "22"

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: |
          bun install

      - name: Run build
        run: bun run build --filter desktop

      - name: Extract metadata
        id: meta
        shell: bash
        run: |
          echo "app_name=noutify" >> $GITHUB_OUTPUT
          echo "app_version=$(jq -r .version apps/desktop/package.json)" >> $GITHUB_OUTPUT

      - name: Build Electron
        run: |
          cd apps/desktop/
          $env:USE_HARD_LINKS = "false"
          bunx electron-builder --win --${{ matrix.arch }}

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-${{ matrix.arch }}-dist
          path: apps/desktop/dist/

      - name: Upload unpacked folder
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-${{ matrix.arch }}-unpacked
          path: apps/desktop/dist/${{ matrix.arch == 'x64' && 'win-unpacked/' || 'win-arm64-unpacked/' }}

      - name: Upload installer .exe
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-${{ matrix.arch }}-installer
          path: apps/desktop/dist/${{ steps.meta.outputs.app_name }} Setup ${{ steps.meta.outputs.app_version }}.exe

      - name: Upload blockmap
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-${{ matrix.arch }}-blockmap
          path: apps/desktop/dist/${{ steps.meta.outputs.app_name }} Setup ${{ steps.meta.outputs.app_version }}.exe.blockmap

name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v4.3.0
        with:
          node-version: '22'

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
            
      - name: Install Dependencies
        run: bun install

      - name: Run build
        run: bunx turbo db:generate && bun run build --filter desktop
  
      - name: cd to build directory
        run: cd apps/desktop
        
      # Only decode certificate for platforms that require code signing
      # - name: Setup code signing certificate
      #   if: matrix.platform == 'mac' || matrix.platform == 'win'
      #   run: |
      #     echo "$CSC_LINK" | base64 -d > cert.p12
      #   env:
      #     CSC_LINK: ${{ secrets.CSC_LINK }}

      - name: Clean previous build artifacts
        run: rm -rf apps/desktop/dist

      - name: Build Electron App for ${{ matrix.platform }}
        run: pwd && ls && cd ./apps/desktop && bunx electron-builder --config electron-builder.yml --linux deb tar.xz
        # env:
        #   CSC_LINK: ${{ runner.workspace }}/cert.p12  # pointing to the local file
        #   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v4.6.2
      #   with:
      #     name: ${{ matrix.platform }}-build
      #     path: dist/*
